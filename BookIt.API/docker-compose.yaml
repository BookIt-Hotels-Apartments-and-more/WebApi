services:
  redis:
    image: redis:7-alpine
    container_name: bookit-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - my_network

  bookit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bookit-api
    restart: unless-stopped
      ports:
      - "7065:7065"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://*:7065
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
      - AZURE_BLOB_STORAGE_CONNECTION_STRING=${AZURE_BLOB_STORAGE_CONNECTION_STRING}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - CLIENT_URL=${CLIENT_URL}
      - BASE_URL=${BASE_URL}
      - MONOBANK_TOKEN=${MONOBANK_TOKEN}
      - MONOBANK_WEBHOOK_SECRET=${MONOBANK_WEBHOOK_SECRET}
      - GEOCODING_API_KEY=${GEOCODING_API_KEY}
      - GEMINI_AI_API_KEY=${GEMINI_AI_API_KEY}
      - EMAIL_SMTP_PASSWORD=${EMAIL_SMTP_PASSWORD}
      - REDIS_CONNECTION_STRING=${REDIS_CONNECTION_STRING}
      - REDIS_INSTANCE_NAME=${REDIS_INSTANCE_NAME}
    volumes:
      - ./https:/https:ro
      - ./Logs:/app/Logs
      - bookit-dataprotection:/root/.aspnet/DataProtection-Keys
    networks:
      - my_network

volumes:
  redis-data:
    driver: local
  bookit-dataprotection:
    driver: local

networks:
  my_network:
    external: true