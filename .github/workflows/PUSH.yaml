name: CI/CD
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env: 
  IMAGE_NAME: pok1min/bookitapi_bookit
  IMAGE_TAG: latest
  CONTAINER_NAME: bookitapi_bookit_1
  REMOTE_HOST: 34.34.77.107
  
jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Get repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./BookIt.API
          file: ./BookIt.API/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}
      
      - name: Deploy container on remote server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo docker pull pok1min/bookitapi_bookit:latest
            sudo docker stop bookitapi_bookit_1 || true
            sudo docker rm bookitapi_bookit_1 || true
            sudo docker-compose --env-file BookIt.API.env up --build -d
            sudo docker network connect my_network bookitapi_bookit_1

      - name: Check site availability
        run: |
          status=$(curl -L -o /dev/null -s -w "%{http_code}" http://bookit.pp.ua)
          if [ "$status" -ne 200 ]; then
            echo "Site is unavailable (HTTP $status)"
            exit 1
          fi 

  zap_scan:
    runs-on: ubuntu-24.04
    needs: deploy
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'https://bookit.pp.ua/'
          token: ${{ secrets.MYTOKEN }}